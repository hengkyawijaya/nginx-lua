# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#


server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    location /my_upstream/ {
      internal; # Specifies that a given location can only be used for internal requests
      proxy_pass_request_headers off;
    #   proxy_set_header Host backend.example.com;
      proxy_set_header Content-Type "application/json";
      proxy_set_header Accept "application/json";
    #   proxy_set_header Authorization "Bearer $bearerToken"

    # it might be different for each operating system
    # bellow proxy pass is for mac
      proxy_pass                http://host.docker.internal:8000/; # trailing slash


    #   proxy_ssl_certificate     /etc/nginx/client.pem;
    #   proxy_ssl_certificate_key /etc/nginx/client.key
      proxy_ssl_verify on;
      proxy_ssl_verify_depth 2; #just example
    #   proxy_ssl_trusted_certificate /etc/nginx/ca.pem;
  }

    location / {
        default_type text/html;
        content_by_lua_block {
            ip  = ngx.var.remote_addr
            local apiurl = string.format('/my_upstream/api/ip/%s', ip)
            res = ngx.location.capture(apiurl)
            if res.body == 'ALLOW' then
                return ngx.print("access allowed");
            end 
            
            if res.body == 'DENY' then
                ngx.status = 403;
                ngx.header.content_type = "text/plain";
                return ngx.print("access denied");
            end

            # fallback code using existing nginx firewall 
            # TODO
        }
    }

      

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}